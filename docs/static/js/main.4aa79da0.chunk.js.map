{"version":3,"sources":["components/addCategory/AddCategory.js","helpers/getGifs.js","components/gifGridItem/GifGridItem.js","components/gifGrid/GifGrid.js","hooks/useFetchGifs.js","components/GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","categoria","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE9B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBI,OACI,sBAAMC,SAXO,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MAMd,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAnBU,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCRdG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,gDACgCC,UACnDH,GAFmB,+DAIFI,MAAMF,GAJJ,cAIfG,EAJe,gBAKEA,EAAKC,OALP,uBAKbC,EALa,EAKbA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GACrB,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAXhB,kBAedM,GAfc,4CAAH,sDCEPO,EAAc,SAAC,GAAwB,IAAtBJ,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAGrC,OADAc,QAAQC,IAAIN,EAAIC,EAAOV,GAEnB,sBAAKgB,UAAU,yCAAf,UACI,qBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,4BAAIA,QCJHS,EAAU,SAAC,GAAmB,IAAjBrB,EAAgB,EAAhBA,UACxB,ECF0B,SAACA,GAC3B,MAA0Bd,mBAAS,CACjCqB,KAAM,GACNe,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAcA,OATAC,qBAAU,WACR1B,EAAQC,GAAW0B,MAAK,SAAAC,GACpBH,EAAS,CACPjB,KAAMoB,EACNL,SAAS,SAGd,CAACtB,IAEGuB,EDb2BK,CAAa5B,GAAjCa,EAAd,EAAQN,KAAce,EAAtB,EAAsBA,QAEtB,OACE,qCACE,6BAAKtB,IACJsB,GAAW,2CACZ,qBAAKJ,UAAU,YAAf,SACGL,EAAOJ,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aETnBkB,EAAe,WAExB,MAAoC3C,mBAAS,CAAC,kBAA9C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAEA,OACI,gCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEQ6C,EAAWrB,KAAK,SAACT,GAAD,OACZ,cAAC,EAAD,CAAyBA,UAAWA,GAAtBA,YCZtC+B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.4aa79da0.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types'   \r\n\r\nexport const AddCategory = ({ setCategorias }) => {\r\n\r\nconst [inputValue, setInputValue] = useState('');\r\n\r\nconst handleInputChange = (e) => {\r\n    setInputValue(e.target.value)\r\n}\r\n\r\nconst handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if(inputValue.trim().length > 2){\r\n        setCategorias( cats => [inputValue, ...cats]);\r\n        setInputValue('');\r\n    }\r\n    \r\n}\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategorias: PropTypes.func.isRequired\r\n}","export const getGifs = async (categoria) => {\r\n  const url = `http://api.giphy.com/v1/gifs/search?q=${encodeURI(\r\n    categoria\r\n  )}&limit=10&api_key=naG1hh8U0FdvoHnL144X5c9enjJEwA4D`;\r\n  const resp = await fetch(url);\r\n  const { data } = await resp.json();\r\n\r\n  const gifs = data.map((img) => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images.downsized_medium.url,\r\n    };\r\n  });\r\n\r\n  return gifs;\r\n};\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ( {id, title, url} ) => {\r\n\r\n    console.log(id, title, url);\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { useFetchGifs } from \"../../hooks/useFetchGifs\";\r\nimport { GifGridItem } from \"../gifGridItem/GifGridItem\";\r\n\r\nexport const GifGrid = ({ categoria }) => {\r\n  const { data: images, loading } = useFetchGifs(categoria);\r\n\r\n  return (\r\n    <>\r\n      <h3>{categoria}</h3>\r\n      {loading && <p>Loading...</p>}\r\n      <div className=\"card-grid\">\r\n        {images.map((img) => (\r\n          <GifGridItem key={img.id} {...img} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (categoria) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(categoria).then(imgs => {\r\n        setState({\r\n          data: imgs,\r\n          loading: false,\r\n        });\r\n    });\r\n  }, [categoria]);\r\n\r\n  return state;\r\n};\r\n","import React, { useState } from 'react'\r\nimport {AddCategory} from './addCategory/AddCategory';\r\nimport { GifGrid } from './gifGrid/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categorias, setCategorias] = useState(['Dragon Ball Z']);\r\n\r\n    return (\r\n        <div>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategorias={ setCategorias }/>\r\n            <hr/>\r\n\r\n            <ol>\r\n                { \r\n                    categorias.map( (categoria) => (\r\n                        <GifGrid key={categoria} categoria={categoria}/>\r\n                    ) )\r\n                }\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {GifExpertApp} from './components/GifExpertApp'\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}